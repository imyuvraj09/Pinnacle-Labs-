{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "349710d7",
   "metadata": {},
   "source": [
    "## <u>Name </u> : Yuvraj Singh \n",
    "## <u>Contact No.</u> : +91 8294138364\n",
    "## <u>Mail ID</u> : yuvrajsinghias09122004@gmail.com\n",
    "## <u>Pinnacle Labs Task No.</u> : 4 -> Auto Correct Tool\n",
    "## Create a AI that corrects the word or give the word which is nearest to it."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "70d20247",
   "metadata": {},
   "source": [
    "### --------------------------------------------------------------------------------------------------------------------------------------------------------\n",
    "### Step 1 -- Importing the necessary modules and libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "0efa2d1a",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package wordnet to\n",
      "[nltk_data]     C:\\Users\\Advait\\AppData\\Roaming\\nltk_data...\n",
      "[nltk_data]   Package wordnet is already up-to-date!\n",
      "[nltk_data] Downloading package omw-1.4 to\n",
      "[nltk_data]     C:\\Users\\Advait\\AppData\\Roaming\\nltk_data...\n",
      "[nltk_data]   Package omw-1.4 is already up-to-date!\n"
     ]
    }
   ],
   "source": [
    "import nltk\n",
    "from nltk.tokenize import word_tokenize\n",
    "from nltk.corpus import wordnet\n",
    "from spellchecker import SpellChecker\n",
    "nltk.download('wordnet')\n",
    "nltk.download('omw-1.4')\n",
    "import spacy\n",
    "#!python -m spacy download en_core_web_lg\n",
    "import en_core_web_lg"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c0cb1691",
   "metadata": {},
   "source": [
    "### Loading the en_core_web_lg model\n",
    "### This function loads spaCy's pre-trained model with large word vectors for English. The model, en_core_web_lg, contains word vectors of 300 dimensions and is useful for various NLP tasks."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "1fa10bac",
   "metadata": {},
   "outputs": [],
   "source": [
    "nlp_model = en_core_web_lg.load()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3e3f9d3b",
   "metadata": {},
   "source": [
    "### --------------------------------------------------------------------------------------------------------------------------------------------------------\n",
    "### Step 2 -- This function takes a word as input and finds the nearest word to it in the vocabulary using cosine similarity between their word vectors. If the word is not present in the vocabulary, it returns 'None'. The function calculates the target vector's norm and then computes the cosine similarity with all other word vectors in the vocabulary."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "32102dab",
   "metadata": {},
   "outputs": [],
   "source": [
    "def find_nearest_word(word):\n",
    "    try:\n",
    "        target_vector = nlp_model.vocab[word].vector\n",
    "        target_vector_norm = target_vector.dot(target_vector) ** 0.5  # Calculate the norm of the target vector\n",
    "        similarities = [(w.text, target_vector.dot(w.vector) / (w.vector_norm * target_vector_norm)) \n",
    "                        for w in nlp_model.vocab if w.has_vector]\n",
    "        nearest_word = max(similarities, key=lambda x: x[1], default=(word, 0))[0]  # Use the default value (original word) if no similar word is found\n",
    "        return nearest_word\n",
    "    except KeyError:\n",
    "        return None"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b7fb9e94",
   "metadata": {},
   "source": [
    "### --------------------------------------------------------------------------------------------------------------------------------------------------------\n",
    "### Step 3 --  This function takes a paragraph (text) as input and corrects misspelled words and finds the nearest word for non-misspelled words. It uses the 'SpellChecker' library to correct misspelled words and the 'find_nearest_word(word)' function to find the nearest word for non-misspelled words. The corrected paragraph is then returned as a string."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "f441c18b",
   "metadata": {},
   "outputs": [],
   "source": [
    "def correct_words(paragraph):\n",
    "    tokens = word_tokenize(paragraph)\n",
    "    spell = SpellChecker()\n",
    "\n",
    "    misspelled_tokens = [token for token in tokens if not spell.correction(token) == token]\n",
    "    corrected_paragraph = [spell.correction(token) if token in misspelled_tokens else find_nearest_word(token) for token in tokens]\n",
    "\n",
    "    # Filter out any None values that might have resulted from find_nearest_word\n",
    "    corrected_paragraph = [token for token in corrected_paragraph if token is not None]\n",
    "\n",
    "    return \" \".join(corrected_paragraph)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b0722261",
   "metadata": {},
   "source": [
    "### --------------------------------------------------------------------------------------------------------------------------------------------------------\n",
    "### Step 4 -- Application"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "2dfe0272",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "Enter a paragraph: \n",
      "\n",
      "The potensial of AI in healthcare is enormus. AI applicasions, such as diagnotics and  imag recongnition, can help doctors make more accuarte decisions and improve  patient outcoms. AI can analyze large amounts of meddical data to identify trends and  pattersn that humans might miss. This can lead to ealier detetction of diseases and  more effictive treatments. Howevr, there are chalenges in implementting AI in the  mediacal field. Issues like data privaccy, regulartory compliance, and getting physicians  to trust AI algorithms are some of the hurdles that need to be addrssed.\n",
      "\n",
      "\n",
      "Corrected Paragraph:\n",
      "\n",
      "\n",
      "The potential of AI in healthcare is enormous . AI applications , such as diagnostics and image recognition , can help doctors make more accurate decisions and improve patient outcome . AI can analyze large amounts of medical data to identify trends and pattern that humans might miss . This can lead to easier detection of diseases and more effective treatments . however , there are challenges in implementing AI in the medical field . Issues like data privacy , regulatory compliance , and getting physicians to trust AI algorithms are some of the hurdles that need to be addressed .\n"
     ]
    }
   ],
   "source": [
    "input_paragraph = input(\"\\n\\nEnter a paragraph: \\n\\n\")\n",
    "corrected_paragraph = correct_words(input_paragraph)\n",
    "print(\"\\n\\nCorrected Paragraph:\\n\\n\")\n",
    "print(corrected_paragraph)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "84aff46b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
